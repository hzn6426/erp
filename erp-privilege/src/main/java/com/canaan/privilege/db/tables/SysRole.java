/**
 * This class is generated by jOOQ
 */
package com.canaan.privilege.db.tables;


import com.canaan.privilege.db.DubboTest;
import com.canaan.privilege.db.Keys;
import com.canaan.privilege.db.tables.records.SysRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysRole extends TableImpl<SysRoleRecord> {

    private static final long serialVersionUID = 1015514995;

    /**
     * The reference instance of <code>dubbo_test.sys_role</code>
     */
    public static final SysRole SYS_ROLE = new SysRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysRoleRecord> getRecordType() {
        return SysRoleRecord.class;
    }

    /**
     * The column <code>dubbo_test.sys_role.id</code>.
     */
    public final TableField<SysRoleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dubbo_test.sys_role.role_code</code>.
     */
    public final TableField<SysRoleRecord, String> ROLE_CODE = createField("role_code", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>dubbo_test.sys_role.role_name</code>.
     */
    public final TableField<SysRoleRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>dubbo_test.sys_role.note</code>.
     */
    public final TableField<SysRoleRecord, String> NOTE = createField("note", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>dubbo_test.sys_role</code> table reference
     */
    public SysRole() {
        this("sys_role", null);
    }

    /**
     * Create an aliased <code>dubbo_test.sys_role</code> table reference
     */
    public SysRole(String alias) {
        this(alias, SYS_ROLE);
    }

    private SysRole(String alias, Table<SysRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysRole(String alias, Table<SysRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DubboTest.DUBBO_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysRoleRecord> getPrimaryKey() {
        return Keys.KEY_SYS_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<SysRoleRecord>>asList(Keys.KEY_SYS_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysRole as(String alias) {
        return new SysRole(alias, this);
    }

    /**
     * Rename this table
     */
    public SysRole rename(String name) {
        return new SysRole(name, null);
    }
}
