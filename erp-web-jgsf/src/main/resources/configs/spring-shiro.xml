<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	 xmlns:cache= "http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <bean id="shiroRedisCacheManager" class="com.canaan.jgsf.shiro.ShiroRedisCacheManager">
        <property name="redisTemplate" ref="redisTemplate"></property>
    </bean>
    <!-- 凭证匹配器 -->  
    <bean id="credentialsMatcher"  
        class="com.canaan.jgsf.shiro.RetryLimitHashedCredentialsMatcher">  
        <constructor-arg ref="shiroRedisCacheManager" />  
        <property name="hashAlgorithmName" value="MD5" /> 
        <property name="hashIterations" value="2" />  
        <property name="storedCredentialsHexEncoded" value="true" />
        <property name="retryTime" value="${login_retry_time}"></property>
        <property name="retryTimeout" value="${login_retry_timeout}"></property>  
    </bean>
    <!-- <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5"/>
        <property name="hashIterations" value="2"></property>
    </bean> -->
    
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    
    <!-- 登录cookie,maxAge -1表示关闭浏览器后清楚cookie -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="ssid"/>
        <property name="httpOnly" value="true"/> 
        <property name="maxAge" value="-1"></property>
    </bean> 
    
    <!-- remeberme -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="rememberMe"/>  
        <property name="httpOnly" value="true"/>  
        <property name="maxAge" value="2592000"/><!-- 30天 -->  
    </bean>
    
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>  
        <property name="cookie" ref="rememberMeCookie"/>  
    </bean>   
    
    <!-- Realm实现 -->
    <bean id="userRealm" class="com.canaan.jgsf.shiro.UserRealm">
        <property name="userService" ref="userService"></property>
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="false"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>
    
    <!-- redisSessionDAO -->
    <bean id="redisSessionDAO" class="com.canaan.jgsf.shiro.ShiroSessionDAO">
        <constructor-arg index="0" ref="redisTemplate"></constructor-arg>
        <constructor-arg index="1" value="${login_redis_expire}"></constructor-arg>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"></property>
    </bean>
    
    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="com.canaan.jgsf.shiro.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="20000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    
    <bean id="shiroSessionFactory" class="com.canaan.jgsf.shiro.ShiroSessionFactory"></bean>
    
    <!-- sessionManager -->
    <bean id="sessionManager" class="com.canaan.jgsf.shiro.ShiroSessionManager">
        <property name="sessionDAO" ref="redisSessionDAO" />
        <property name="globalSessionTimeout" value="${login_session_timeout}"/>  
        <property name="deleteInvalidSessions" value="true"/>  
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionIdCookieEnabled" value="true"/> 
        <property name="sessionIdCookie" ref="sessionIdCookie"/>  
        <property name="sessionFactory" ref="shiroSessionFactory"/>
        <!-- 静态资源不需要经过redis读取session -->
        <property name="staticResourceUrls">
            <list>
                <value>/static/**</value>
            </list>
        </property>
    </bean>
    
    
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
   		<property name="sessionManager" ref="sessionManager" />
   		<property name="rememberMeManager" ref="rememberMeManager"/>
		<property name="cacheManager" ref="shiroRedisCacheManager" />
	</bean>

    
	<!-- 項目自定义的Realm -->
	<!-- <bean id="shiroDbRealm" class="com.canaan.security.merchant.ShiroDbRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"/>
            </bean>
        </property>
	</bean> -->
    
    <!-- 安全退出filter  --> 
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
         <property name="redirectUrl" value="/login" />
    </bean>
    
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    
    
    <bean id="rememberMeAuthenticationFilter"  class="com.canaan.jgsf.shiro.RememberMeAuthenticationFilter">
    </bean>
    
    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="authcAuthenticationFilter" class="com.canaan.jgsf.shiro.AuthcAuthenticationFilter">
        <!-- <property name="loginUrl" value="/login"></property>
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="remember"/>
        <property name="successUrl" value="/swagger-ui.html"></property>
        <property name="failureKeyAttribute" value="shiro_login_failure"></property> -->
    </bean>
    
    <bean id="scrfFilter" class="com.canaan.jgsf.csrf.CsrfFilter"></bean>
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/doLogin" />
		<property name="unauthorizedUrl" value="/lock.html"/>
		<property name="successUrl" value="/swagger-ui.html" ></property>
		<!-- <property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource" /> -->
		<property name="filters">
		    <map>
		        <entry key="authc" value-ref="authcAuthenticationFilter"/>  
		        <entry key="csrf" value-ref="scrfFilter"></entry>
		        <entry key="user" value-ref="rememberMeAuthenticationFilter"></entry>
		        <entry key="logout" value-ref="logoutFilter" />
		    </map>
		</property>
		<property name="filterChainDefinitions">  
            <value>  
                /favicon.ico = anon
                <!-- 静态资源允许访问 -->  
                /static/** = anon
                /swagger** = authc
                /webjars/** = anon
                <!-- 登录注册允许访问 -->  
                /register* = anon  
                <!-- 登出 --> 
                /logout = logout  
                <!-- 登录 -->
                <!-- /checkLogin = anon -->
                /login=csrf,anon
                <!-- /user = rest[user]
                /role = rest[role]
                /button = rest[button]
                /menu = rest[menu] -->
                /button = rest[button]
                /role/** = user
                <!-- /*update* = authc   -->
                <!-- remeber业务 -->
                /** = csrf,authc
                
                <!-- 其他资源需要认证 -->  
                
                <!-- perms[user:query]表示访问此连接需要权限为user:query的用户 -->  
                <!-- /user=perms[user:query] -->  
                <!-- roles[manager]表示访问此连接需要用户的角色为manager -->  
                <!-- /user/add=roles[manager] -->  
            </value>  
        </property>  
	</bean>
	<!-- <bean id="chainDefinitionSectionMetaSource" class="com.canaan.security.merchant.ChainDefinitionSectionMetaSource"> 
	    <property name="filterChainDefinitions"> 
	        <value> 
	       		/demo/init=anon
	            /logout = logout
	            /index = authc
	        </value> 
	    </property> 
	</bean> -->
	
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- shiro 注解支持 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>  
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>